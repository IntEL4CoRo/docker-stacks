#FROM osrf/ros:noetic-desktop-full AS build

FROM jupyter/base-notebook:ubuntu-20.04

USER root 

ARG ROS_PKG=ros_base
ENV ROS_DISTRO=noetic
ENV ROS_ROOT=/opt/ros/${ROS_DISTRO}
ENV ROS_PYTHON_VERSION=3
ENV DEBIAN_FRONTEND=noninteractive
RUN apt-get update
RUN conda install -y empy pyyaml catkin_pkg

# Setup ROS
RUN apt-get update -y && apt-get install -y lsb-release && apt-get install -y gnupg2 || true && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y tzdata curl && \
    sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list' 
    #&& \
RUN curl -s https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | sudo apt-key add - && \
    apt-get update && sudo apt --fix-broken install || true &&\
    DEBIAN_FRONTEND=noninteractive apt-get install -y ros-$ROS_DISTRO-desktop-full build-essential cmake usbutils libusb-1.0-0-dev git -y --allow-unauthenticated

RUN apt-get install -y python3-rosdep python3-rosinstall  python3-rosinstall-generator python3-wstool

#removes package lists, loaded by apt update . apt clean removes cached packages
RUN rm -rf /var/lib/apt/lists/*

ENV ROSINSTALL_PREFIX=https://raw.githubusercontent.com/cram2/cram/devel
ENV CRAM_ROSINSTALL_FILE="${ROSINSTALL_PREFIX}/cram-20.04-http.rosinstall"
ENV JUPYTER_ROSINSTALL_FILE="${ROSINSTALL_PREFIX}/jupyter/common-lisp-jupyter.rosinstall"

#USER ${NB_USER}
ENV HOME /home/${NB_USER}

# ------
RUN echo "--- Set up ROS environment variables ---"
RUN sudo rosdep init
USER ${NB_UID}
RUN source /opt/ros/noetic/setup.bash
ENV ROS_PACKAGE_PATH=/home/${NB_USER}/workspace/ros/src:/opt/ros/noetic/share:/opt/ros/noetic/stacks
ENV CMAKE_PREFIX_PATH=/home/${NB_USER}/workspace/ros/devel:/opt/ros/noetic
ENV PATH=/opt/ros/noetic/bin:$PATH
ENV ROS_ROOT=/opt/ros/noetic/share/ros
ENV PYTHONPATH=/home/${NB_USER}/workspace/ros/devel/lib/python3/dist-packages:/opt/ros/noetic/lib/python3/dist-packages
ENV PATH=/root/.local/bin:$PATH
USER root
RUN rosdep update 
# using as root is not intended, it works though.

# ------
RUN echo "--- Install ROS tools and dependencies ---"
RUN apt-get update && apt-get upgrade -y 
RUN apt-get install -y dialog curl git python3-dev python3-pip python3-catkin-tools python3-rosdep \ 
python3-rosinstall python3-rosinstall-generator python3-wstool build-essential ros-noetic-roslisp-repl


# ------
RUN echo "--- Set up Catkin Workspace ---"
USER root
RUN mkdir -p /home/${NB_USER}/workspace/ros/src 
WORKDIR /home/${NB_USER}/workspace/ros
RUN catkin init
WORKDIR /home/${NB_USER}/workspace/ros/src
RUN wstool init
RUN wstool merge $CRAM_ROSINSTALL_FILE
RUN wstool update
USER root
RUN rosdep install -y --ignore-src --from-paths ./ -r
WORKDIR /home/${NB_USER}/workspace/ros/
RUN apt-get install -y python3-catkin-tools
RUN catkin config --extend /opt/ros/noetic
RUN catkin build

# ------
RUN echo "--- Install common-lisp-jupyter---" 
WORKDIR /home/${NB_USER}/workspace/ros/src
RUN catkin_create_pkg jupyter
WORKDIR /home/${NB_USER}/workspace/ros/src/jupyter
RUN wstool init 
RUN wstool merge $JUPYTER_ROSINSTALL_FILE
RUN wstool update
RUN rosdep install -y --ignore-src --from-paths ./ -r
WORKDIR /home/${NB_USER}/workspace/ros/
RUN catkin build 
RUN echo $(ls -1 /home/${NB_USER}/.local/)
ENV ROSLISP_PACKAGE_DIRECTORIES=/home/${NB_USER}/workspace/ros/devel/share/common-lisp
RUN /usr/bin/sbcl --non-interactive --load /home/${NB_USER}/workspace/ros/src/cram/jupyter/sbcl-jupyter-kernel-installer.lisp

#setting kernel owner n group 
RUN chown -R ${NB_USER} /home/${NB_USER}/.local/share/jupyter/kernels/common-lisp
RUN chgrp -R users /home/${NB_USER}/.local/share/jupyter/kernels/common-lisp

USER ${NB_USER}
RUN /usr/bin/sbcl --non-interactive --load /home/${NB_USER}/workspace/ros/src/cram/jupyter/sbcl-jupyter-kernel-installer.lisp

# ------
USER root
RUN fix-permissions "/home/${NB_USER}"
RUN conda install --quiet --yes nbgitpuller
RUN apt-get install -y net-tools xvfb
RUN source /home/${NB_USER}/workspace/ros/devel/setup.bash
RUN echo "source /home/${NB_USER}/workspace/ros/devel/setup.bash" >> ~/.bashrc
RUN source ~/.bashrc
RUN echo "--- Set entry point ---"
RUN mkdir -p /home/bhavya/test
WORKDIR ${HOME}

#if running the file locally
#CMD ["jupyter", "lab", "--port=8888", "--no-browser", "--ip=0.0.0.0", "--allow-root"]
